Coverage Report by instance with details

=================================================================================
=== Instance: /top/fifo_vif
=== Design Unit: work.fifo_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        132       132         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/fifo_vif --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                   almostempty_ref           1           1      100.00 
                                        almostfull           1           1      100.00 
                                    almostfull_ref           1           1      100.00 
                                               clk           1           1      100.00 
                                     data_in[15-0]           1           1      100.00 
                                    data_out[15-0]           1           1      100.00 
                                data_out_ref[15-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                         empty_ref           1           1      100.00 
                                              full           1           1      100.00 
                                          full_ref           1           1      100.00 
                                          overflow           1           1      100.00 
                                      overflow_ref           1           1      100.00 
                                             rd_en           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                     underflow_ref           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                        wr_ack_ref           1           1      100.00 
                                             wr_en           1           1      100.00 

Total Node Count     =         66 
Toggled Node Count   =         66 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (132 of 132 bins)

=================================================================================
=== Instance: /top/DUT/fifo_assert_dut
=== Design Unit: work.fifo_assert
=================================================================================

Assertion Coverage:
    Assertions                      10        10         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/fifo_assert_dut/as1
                     fifo_assert.sv(8)                  0          1
/top/DUT/fifo_assert_dut/as2
                     fifo_assert.sv(15)                 0          1
/top/DUT/fifo_assert_dut/as3
                     fifo_assert.sv(22)                 0          1
/top/DUT/fifo_assert_dut/as4
                     fifo_assert.sv(29)                 0          1
/top/DUT/fifo_assert_dut/as5
                     fifo_assert.sv(37)                 0          1
/top/DUT/fifo_assert_dut/as6
                     fifo_assert.sv(42)                 0          1
/top/DUT/fifo_assert_dut/as7
                     fifo_assert.sv(49)                 0          1
/top/DUT/fifo_assert_dut/as8
                     fifo_assert.sv(56)                 0          1
/top/DUT/fifo_assert_dut/as9
                     fifo_assert.sv(63)                 0          1
/top/DUT/fifo_assert_dut/a_reset
                     fifo_assert.sv(70)                 0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10        10         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/fifo_assert_dut

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_assert.sv
------------------------------------IF Branch------------------------------------
    41                                       320     Count coming in to IF
    41              1                         58         if (fifo_vif.rst_n && (DUT.count == fifo_vif.FIFO_DEPTH)) begin
                                             262     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                       320     Count coming in to IF
    48              1                         23         if (fifo_vif.rst_n && !DUT.count) begin
                                             297     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    55                                       320     Count coming in to IF
    55              1                         70         if (fifo_vif.rst_n && (DUT.count == fifo_vif.FIFO_DEPTH - 4'b0001)) begin
                                             250     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    62                                       320     Count coming in to IF
    62              1                         26         if (fifo_vif.rst_n && (DUT.count == 4'b0001)) begin
                                             294     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                       403     Count coming in to IF
    69              1                         37         if(!fifo_vif.rst_n)
                                             366     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         6         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT/fifo_assert_dut --

  File fifo_assert.sv
----------------Focused Condition View-------------------
Line       41 Item    1  (fifo_vif.rst_n && (DUT.count == 8))
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
    fifo_vif.rst_n         Y
  (DUT.count == 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rst_n_0      -                             
  Row   2:          1  fifo_vif.rst_n_1      (DUT.count == 8)              
  Row   3:          1  (DUT.count == 8)_0    fifo_vif.rst_n                
  Row   4:          1  (DUT.count == 8)_1    fifo_vif.rst_n                

----------------Focused Condition View-------------------
Line       55 Item    1  (fifo_vif.rst_n && (DUT.count == (8 - 1)))
Condition totals: 2 of 2 input terms covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
          fifo_vif.rst_n         Y
  (DUT.count == (8 - 1))         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  fifo_vif.rst_n_0          -                             
  Row   2:          1  fifo_vif.rst_n_1          (DUT.count == (8 - 1))        
  Row   3:          1  (DUT.count == (8 - 1))_0  fifo_vif.rst_n                
  Row   4:          1  (DUT.count == (8 - 1))_1  fifo_vif.rst_n                

----------------Focused Condition View-------------------
Line       62 Item    1  (fifo_vif.rst_n && (DUT.count == 1))
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
    fifo_vif.rst_n         Y
  (DUT.count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rst_n_0      -                             
  Row   2:          1  fifo_vif.rst_n_1      (DUT.count == 1)              
  Row   3:          1  (DUT.count == 1)_0    fifo_vif.rst_n                
  Row   4:          1  (DUT.count == 1)_1    fifo_vif.rst_n                



Directive Coverage:
    Directives                      10        10         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/fifo_assert_dut/co1             fifo_assert Verilog  SVA  fifo_assert.sv(9)
                                                                               241 Covered   
/top/DUT/fifo_assert_dut/co2             fifo_assert Verilog  SVA  fifo_assert.sv(16)
                                                                               594 Covered   
/top/DUT/fifo_assert_dut/co3             fifo_assert Verilog  SVA  fifo_assert.sv(23)
                                                                               494 Covered   
/top/DUT/fifo_assert_dut/co4             fifo_assert Verilog  SVA  fifo_assert.sv(30)
                                                                               169 Covered   
/top/DUT/fifo_assert_dut/co5             fifo_assert Verilog  SVA  fifo_assert.sv(38)
                                                                                46 Covered   
/top/DUT/fifo_assert_dut/co6             fifo_assert Verilog  SVA  fifo_assert.sv(43)
                                                                                58 Covered   
/top/DUT/fifo_assert_dut/co7             fifo_assert Verilog  SVA  fifo_assert.sv(50)
                                                                                23 Covered   
/top/DUT/fifo_assert_dut/co8             fifo_assert Verilog  SVA  fifo_assert.sv(57)
                                                                                70 Covered   
/top/DUT/fifo_assert_dut/co9             fifo_assert Verilog  SVA  fifo_assert.sv(64)
                                                                                26 Covered   
/top/DUT/fifo_assert_dut/a_cover         fifo_assert Verilog  SVA  fifo_assert.sv(71)
                                                                                45 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       5         5         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/fifo_assert_dut --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_assert.sv
    1                                                module fifo_assert (fifo_if.DUT fifo_vif);
    2                                                    
    3                                                
    4                                                  property prop1;
    5                                                	@(posedge fifo_vif.clk) disable iff(!fifo_vif.rst_n) (fifo_vif.wr_en &&  !fifo_vif.full) |=> fifo_vif.wr_ack ;
    6                                                  endproperty
    7                                                
    8                                                  as1:assert property (prop1);
    9                                                  co1:cover property (prop1);
    10                                               
    11                                                 property prop2;
    12                                                   @(posedge fifo_vif.clk) disable iff (!fifo_vif.rst_n) (fifo_vif.full && fifo_vif.wr_en) |=> fifo_vif.overflow;
    13                                                 endproperty
    14                                               
    15                                                 as2:assert property (prop2);
    16                                                 co2:cover property (prop2);
    17                                                 
    18                                                 property prop3;
    19                                                   @(posedge fifo_vif.clk) disable iff (!fifo_vif.rst_n) (fifo_vif.empty && fifo_vif.rd_en) |=> fifo_vif.underflow;
    20                                                 endproperty
    21                                                   
    22                                                 as3:assert property (prop3);
    23                                                 co3:cover property (prop3);
    24                                                 
    25                                                 property prop4;
    26                                                   @(posedge fifo_vif.clk) disable iff (!fifo_vif.rst_n) (fifo_vif.wr_en  && !fifo_vif.rd_en && !fifo_vif.full) |=> DUT.count <= $past(DUT.count) + 4'b0001;
    27                                                 endproperty
    28                                                   
    29                                                 as4:assert property (prop4);
    30                                                 co4:cover property (prop4);
    31                                                 
    32                                                 property prop5;
    33                                                   @(posedge fifo_vif.clk) disable iff (!fifo_vif.rst_n) (!fifo_vif.wr_en && fifo_vif.rd_en && !fifo_vif.empty) |=> DUT.count <= $past(DUT.count) - 4'b0001;
    34                                                 	
    35                                                 endproperty
    36                                                   
    37                                                 as5:assert property (prop5);
    38                                                 co5:cover property (prop5);
    39                                               
    40              1                        320       always_comb begin
    41                                                   if (fifo_vif.rst_n && (DUT.count == fifo_vif.FIFO_DEPTH)) begin
    42                                                      as6: assert final(fifo_vif.full == 1);
    43                                                      co6: cover (fifo_vif.full == 1);
    44                                                   end
    45                                                 end
    46                                               
    47              1                        320       always_comb begin
    48                                                   if (fifo_vif.rst_n && !DUT.count) begin
    49                                                      as7: assert final(fifo_vif.empty == 1);
    50                                                      co7: cover (fifo_vif.empty == 1);
    51                                                   end
    52                                                 end
    53                                               
    54              1                        320       always_comb begin
    55                                                   if (fifo_vif.rst_n && (DUT.count == fifo_vif.FIFO_DEPTH - 4'b0001)) begin
    56                                                      as8: assert final(fifo_vif.almostfull == 1);
    57                                                      co8: cover (fifo_vif.almostfull == 1);
    58                                                   end
    59                                                 end
    60                                               
    61              1                        320       always_comb begin
    62                                                   if (fifo_vif.rst_n && (DUT.count == 4'b0001)) begin
    63                                                      as9: assert final(fifo_vif.almostempty == 1);
    64                                                      co9: cover (fifo_vif.almostempty == 1);
    65                                                   end
    66                                                 end
    67                                               
    68              1                        403       always_comb begin


=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.FIFO_DUT
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        25        25         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
------------------------------------IF Branch------------------------------------
    18                                      1519     Count coming in to IF
    18              1                         38     	if (!fifo_vif.rst_n) begin
    23              1                        255     	else if (fifo_vif.wr_en && count < fifo_vif.FIFO_DEPTH) begin
    28              1                       1226     	else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    30                                      1226     Count coming in to IF
    30              1                        596     		if (fifo_vif.full & fifo_vif.wr_en)
    32              1                        630     		else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    38                                      1519     Count coming in to IF
    38              1                         38     	if (!fifo_vif.rst_n) begin
    43              1                        151     	else if (fifo_vif.rd_en && count != 0) begin
    47              1                       1330     	else begin  
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                      1330     Count coming in to IF
    48              1                        496     		if (fifo_vif.empty & fifo_vif.rd_en)
    50              1                        834     		else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    56                                       477     Count coming in to IF
    56              1                         38     	if (!fifo_vif.rst_n) begin
    59              1                        439     	else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                       439     Count coming in to IF
    60              1                        181     		if	( ({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b10) && !fifo_vif.full) 
    62              1                         47     		else if ( ({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b01) && !fifo_vif.empty)
    64              1                         33     	    else if (({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b11) && fifo_vif.full)    //fourth debug :  cover all cases for counter (full) 
    66              1                          3     		else if (({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b11) && fifo_vif.empty)    //fiveth debug : cover all cases for counter (empty) 
                                             175     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    71                                       282     Count coming in to IF
    71              1                         58     assign fifo_vif.full = (count == fifo_vif.FIFO_DEPTH)? 1 : 0;
    71              2                        224     assign fifo_vif.full = (count == fifo_vif.FIFO_DEPTH)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                       282     Count coming in to IF
    72              1                         22     assign fifo_vif.empty = (count == 0)? 1 : 0;
    72              2                        260     assign fifo_vif.empty = (count == 0)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    73                                       282     Count coming in to IF
    73              1                         70     assign fifo_vif.almostfull = (count == fifo_vif.FIFO_DEPTH-1)? 1 : 0;  // sexth debug : in case of almostfull (fifo_vif.FIFO_DEPTH-1) not (fifo_vif.FIFO_DEPTH-2)
    73              2                        212     assign fifo_vif.almostfull = (count == fifo_vif.FIFO_DEPTH-1)? 1 : 0;  // sexth debug : in case of almostfull (fifo_vif.FIFO_DEPTH-1) not (fifo_vif.FIFO_DEPTH-2)
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    74                                       282     Count coming in to IF
    74              1                         26     assign fifo_vif.almostempty = (count == 1)? 1 : 0;
    74              2                        256     assign fifo_vif.almostempty = (count == 1)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      24        22         2    91.66%

================================Condition Details================================

Condition Coverage for instance /top/DUT --

  File FIFO.sv
----------------Focused Condition View-------------------
Line       23 Item    1  (fifo_vif.wr_en && (count < fifo_vif.FIFO_DEPTH))
Condition totals: 2 of 2 input terms covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
                 fifo_vif.wr_en         Y
  (count < fifo_vif.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          1  fifo_vif.wr_en_0                 -                             
  Row   2:          1  fifo_vif.wr_en_1                 (count < fifo_vif.FIFO_DEPTH) 
  Row   3:          1  (count < fifo_vif.FIFO_DEPTH)_0  fifo_vif.wr_en                
  Row   4:          1  (count < fifo_vif.FIFO_DEPTH)_1  fifo_vif.wr_en                

----------------Focused Condition View-------------------
Line       30 Item    1  (fifo_vif.full & fifo_vif.wr_en)
Condition totals: 1 of 2 input terms covered = 50.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
   fifo_vif.full         N  '_0' not hit             Hit '_0'
  fifo_vif.wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  fifo_vif.full_0       fifo_vif.wr_en                
  Row   2:          1  fifo_vif.full_1       fifo_vif.wr_en                
  Row   3:          1  fifo_vif.wr_en_0      fifo_vif.full                 
  Row   4:          1  fifo_vif.wr_en_1      fifo_vif.full                 

----------------Focused Condition View-------------------
Line       43 Item    1  (fifo_vif.rd_en && (count != 0))
Condition totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  fifo_vif.rd_en         Y
    (count != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rd_en_0      -                             
  Row   2:          1  fifo_vif.rd_en_1      (count != 0)                  
  Row   3:          1  (count != 0)_0        fifo_vif.rd_en                
  Row   4:          1  (count != 0)_1        fifo_vif.rd_en                

----------------Focused Condition View-------------------
Line       48 Item    1  (fifo_vif.empty & fifo_vif.rd_en)
Condition totals: 1 of 2 input terms covered = 50.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  fifo_vif.empty         N  '_0' not hit             Hit '_0'
  fifo_vif.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  fifo_vif.empty_0      fifo_vif.rd_en                
  Row   2:          1  fifo_vif.empty_1      fifo_vif.rd_en                
  Row   3:          1  fifo_vif.rd_en_0      fifo_vif.empty                
  Row   4:          1  fifo_vif.rd_en_1      fifo_vif.empty                

----------------Focused Condition View-------------------
Line       60 Item    1  ((~fifo_vif.rd_en && fifo_vif.wr_en) && ~fifo_vif.full)
Condition totals: 3 of 3 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  fifo_vif.rd_en         Y
  fifo_vif.wr_en         Y
   fifo_vif.full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rd_en_0      (~fifo_vif.full && fifo_vif.wr_en)
  Row   2:          1  fifo_vif.rd_en_1      -                             
  Row   3:          1  fifo_vif.wr_en_0      ~fifo_vif.rd_en               
  Row   4:          1  fifo_vif.wr_en_1      (~fifo_vif.full && ~fifo_vif.rd_en)
  Row   5:          1  fifo_vif.full_0       (~fifo_vif.rd_en && fifo_vif.wr_en)
  Row   6:          1  fifo_vif.full_1       (~fifo_vif.rd_en && fifo_vif.wr_en)

----------------Focused Condition View-------------------
Line       62 Item    1  ((fifo_vif.rd_en && ~fifo_vif.wr_en) && ~fifo_vif.empty)
Condition totals: 3 of 3 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  fifo_vif.rd_en         Y
  fifo_vif.wr_en         Y
  fifo_vif.empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rd_en_0      -                             
  Row   2:          1  fifo_vif.rd_en_1      (~fifo_vif.empty && ~fifo_vif.wr_en)
  Row   3:          1  fifo_vif.wr_en_0      (~fifo_vif.empty && fifo_vif.rd_en)
  Row   4:          1  fifo_vif.wr_en_1      fifo_vif.rd_en                
  Row   5:          1  fifo_vif.empty_0      (fifo_vif.rd_en && ~fifo_vif.wr_en)
  Row   6:          1  fifo_vif.empty_1      (fifo_vif.rd_en && ~fifo_vif.wr_en)

----------------Focused Condition View-------------------
Line       64 Item    1  ((fifo_vif.rd_en && fifo_vif.wr_en) && fifo_vif.full)
Condition totals: 3 of 3 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  fifo_vif.rd_en         Y
  fifo_vif.wr_en         Y
   fifo_vif.full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rd_en_0      -                             
  Row   2:          1  fifo_vif.rd_en_1      (fifo_vif.full && fifo_vif.wr_en)
  Row   3:          1  fifo_vif.wr_en_0      fifo_vif.rd_en                
  Row   4:          1  fifo_vif.wr_en_1      (fifo_vif.full && fifo_vif.rd_en)
  Row   5:          1  fifo_vif.full_0       (fifo_vif.rd_en && fifo_vif.wr_en)
  Row   6:          1  fifo_vif.full_1       (fifo_vif.rd_en && fifo_vif.wr_en)

----------------Focused Condition View-------------------
Line       66 Item    1  ((fifo_vif.rd_en && fifo_vif.wr_en) && fifo_vif.empty)
Condition totals: 3 of 3 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  fifo_vif.rd_en         Y
  fifo_vif.wr_en         Y
  fifo_vif.empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rd_en_0      -                             
  Row   2:          1  fifo_vif.rd_en_1      (fifo_vif.empty && fifo_vif.wr_en)
  Row   3:          1  fifo_vif.wr_en_0      fifo_vif.rd_en                
  Row   4:          1  fifo_vif.wr_en_1      (fifo_vif.empty && fifo_vif.rd_en)
  Row   5:          1  fifo_vif.empty_0      (fifo_vif.rd_en && fifo_vif.wr_en)
  Row   6:          1  fifo_vif.empty_1      (fifo_vif.rd_en && fifo_vif.wr_en)

----------------Focused Condition View-------------------
Line       71 Item    1  (count == fifo_vif.FIFO_DEPTH)
Condition totals: 1 of 1 input term covered = 100.00%

                      Input Term   Covered  Reason for no coverage   Hint
                     -----------  --------  -----------------------  --------------
  (count == fifo_vif.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                        Non-masking condition(s)      
 ---------  ---------  --------------------              -------------------------     
  Row   1:          1  (count == fifo_vif.FIFO_DEPTH)_0  -                             
  Row   2:          1  (count == fifo_vif.FIFO_DEPTH)_1  -                             

----------------Focused Condition View-------------------
Line       72 Item    1  (count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 0)_0        -                             
  Row   2:          1  (count == 0)_1        -                             

----------------Focused Condition View-------------------
Line       73 Item    1  (count == (fifo_vif.FIFO_DEPTH - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                            Input Term   Covered  Reason for no coverage   Hint
                           -----------  --------  -----------------------  --------------
  (count == (fifo_vif.FIFO_DEPTH - 1))         Y

     Rows:       Hits  FEC Target                              Non-masking condition(s)      
 ---------  ---------  --------------------                    -------------------------     
  Row   1:          1  (count == (fifo_vif.FIFO_DEPTH - 1))_0  -                             
  Row   2:          1  (count == (fifo_vif.FIFO_DEPTH - 1))_1  -                             

----------------Focused Condition View-------------------
Line       74 Item    1  (count == 1)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 1)_0        -                             
  Row   2:          1  (count == 1)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      28        28         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
    8                                                module FIFO_DUT (fifo_if.DUT fifo_vif);
    9                                                 
    10                                               localparam max_fifo_addr = $clog2(fifo_vif.FIFO_DEPTH);
    11                                               
    12                                               reg [fifo_vif.FIFO_WIDTH-1:0] mem [fifo_vif.FIFO_DEPTH-1:0];
    13                                               
    14                                               reg [max_fifo_addr-1:0] wr_ptr, rd_ptr;
    15                                               reg [max_fifo_addr:0] count;
    16                                               
    17              1                       1519     always @(posedge fifo_vif.clk or negedge fifo_vif.rst_n) begin
    18                                               	if (!fifo_vif.rst_n) begin
    19              1                         38     		wr_ptr <= 0;
    20              1                         38     		fifo_vif.wr_ack <= 0;
    21              1                         38     		fifo_vif.overflow <= 0; //first debug : Reset all sequential outputs in write operation
    22                                               	end
    23                                               	else if (fifo_vif.wr_en && count < fifo_vif.FIFO_DEPTH) begin
    24              1                        255     		mem[wr_ptr] <= fifo_vif.data_in;
    25              1                        255     		fifo_vif.wr_ack <= 1;
    26              1                        255     		wr_ptr <= wr_ptr + 1;
    27                                               	end
    28                                               	else begin 
    29              1                       1226     		fifo_vif.wr_ack <= 0; 
    30                                               		if (fifo_vif.full & fifo_vif.wr_en)
    31              1                        596     			fifo_vif.overflow <= 1;
    32                                               		else
    33              1                        630     			fifo_vif.overflow <= 0;
    34                                               	end
    35                                               end
    36                                               
    37              1                       1519     always @(posedge fifo_vif.clk or negedge fifo_vif.rst_n) begin
    38                                               	if (!fifo_vif.rst_n) begin
    39              1                         38     		rd_ptr <= 0;          //second debug : Reset all sequential outputs in read operation
    40              1                         38     		fifo_vif.underflow <= 0;
    41              1                         38     		fifo_vif.data_out <= 0;
    42                                               	end
    43                                               	else if (fifo_vif.rd_en && count != 0) begin
    44              1                        151     		fifo_vif.data_out <= mem[rd_ptr];
    45              1                        151     		rd_ptr <= rd_ptr + 1;
    46                                               	end
    47                                               	else begin  
    48                                               		if (fifo_vif.empty & fifo_vif.rd_en)
    49              1                        496     			fifo_vif.underflow <= 1;   //third debug : underflow is sequential not combinational (put in alwyas block)
    50                                               		else
    51              1                        834     			fifo_vif.underflow <= 0;
    52                                               	end
    53                                               end
    54                                               
    55              1                        477     always @(posedge fifo_vif.clk or negedge fifo_vif.rst_n) begin
    56                                               	if (!fifo_vif.rst_n) begin
    57              1                         38     		count <= 0;
    58                                               	end
    59                                               	else begin
    60                                               		if	( ({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b10) && !fifo_vif.full) 
    61              1                        181     			count <= count + 1;
    62                                               		else if ( ({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b01) && !fifo_vif.empty)
    63              1                         47     			count <= count - 1;
    64                                               	    else if (({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b11) && fifo_vif.full)    //fourth debug :  cover all cases for counter (full) 
    65              1                         33     			count <= count - 1;
    66                                               		else if (({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b11) && fifo_vif.empty)    //fiveth debug : cover all cases for counter (empty) 
    67              1                          3     			count <= count + 1;
    68                                               	end
    69                                               end
    70                                               
    71              1                        283     assign fifo_vif.full = (count == fifo_vif.FIFO_DEPTH)? 1 : 0;
    72              1                        283     assign fifo_vif.empty = (count == 0)? 1 : 0;
    73              1                        283     assign fifo_vif.almostfull = (count == fifo_vif.FIFO_DEPTH-1)? 1 : 0;  // sexth debug : in case of almostfull (fifo_vif.FIFO_DEPTH-1) not (fifo_vif.FIFO_DEPTH-2)
    74              1                        283     assign fifo_vif.almostempty = (count == 1)? 1 : 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         20        20         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                        count[3-0]           1           1      100.00 
                                       rd_ptr[2-0]           1           1      100.00 
                                       wr_ptr[2-0]           1           1      100.00 

Total Node Count     =         10 
Toggled Node Count   =         10 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (20 of 20 bins)

=================================================================================
=== Instance: /top/DUT_gold
=== Design Unit: work.fifo_reference_model
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        25        25         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT_gold

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_reference_model.sv
------------------------------------IF Branch------------------------------------
    7                                       1519     Count coming in to IF
    7               1                         38     			if (!fifo_vif.rst_n) begin
    12              1                        255     			else if (fifo_vif.wr_en && count_n < fifo_vif.FIFO_DEPTH) begin
    17              1                       1226     			else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    19                                      1226     Count coming in to IF
    19              1                        596     				if (fifo_vif.full_ref & fifo_vif.wr_en)
    21              1                        630     				else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    27                                      1519     Count coming in to IF
    27              1                         38     			if (!fifo_vif.rst_n) begin
    31              1                        151         		else if (fifo_vif.rd_en && count_n != 0) begin
    34              1                       1330     			else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    35                                      1330     Count coming in to IF
    35              1                        496     				if (fifo_vif.empty_ref & fifo_vif.rd_en)
    37              1                        834     				else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    43                                       477     Count coming in to IF
    43              1                         38             if (!fifo_vif.rst_n) begin
    47              1                        439             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                       439     Count coming in to IF
    48              1                        181     	        if	( ({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b10) && !fifo_vif.full_ref) 
    50              1                         47     	        else if ( ({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b01) && !fifo_vif.empty_ref)
    52              1                         33                 else if (({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b11) && fifo_vif.full_ref)     
    54              1                          3     	        else if (({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b11) && fifo_vif.empty_ref)      
                                             175     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    59                                       282     Count coming in to IF
    59              1                         58         assign fifo_vif.full_ref = (count_n == fifo_vif.FIFO_DEPTH)? 1 : 0;
    59              2                        224         assign fifo_vif.full_ref = (count_n == fifo_vif.FIFO_DEPTH)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    60                                       282     Count coming in to IF
    60              1                         22         assign fifo_vif.empty_ref = (count_n == 0)? 1 : 0; 
    60              2                        260         assign fifo_vif.empty_ref = (count_n == 0)? 1 : 0; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    61                                       282     Count coming in to IF
    61              1                         70         assign fifo_vif.almostfull_ref = (count_n == fifo_vif.FIFO_DEPTH-1)? 1 : 0; 
    61              2                        212         assign fifo_vif.almostfull_ref = (count_n == fifo_vif.FIFO_DEPTH-1)? 1 : 0; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    62                                       282     Count coming in to IF
    62              1                         26         assign fifo_vif.almostempty_ref = (count_n == 1)? 1 : 0;
    62              2                        256         assign fifo_vif.almostempty_ref = (count_n == 1)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      24        22         2    91.66%

================================Condition Details================================

Condition Coverage for instance /top/DUT_gold --

  File fifo_reference_model.sv
----------------Focused Condition View-------------------
Line       12 Item    1  (fifo_vif.wr_en && (count_n < fifo_vif.FIFO_DEPTH))
Condition totals: 2 of 2 input terms covered = 100.00%

                       Input Term   Covered  Reason for no coverage   Hint
                      -----------  --------  -----------------------  --------------
                   fifo_vif.wr_en         Y
  (count_n < fifo_vif.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                         Non-masking condition(s)      
 ---------  ---------  --------------------               -------------------------     
  Row   1:          1  fifo_vif.wr_en_0                   -                             
  Row   2:          1  fifo_vif.wr_en_1                   (count_n < fifo_vif.FIFO_DEPTH)
  Row   3:          1  (count_n < fifo_vif.FIFO_DEPTH)_0  fifo_vif.wr_en                
  Row   4:          1  (count_n < fifo_vif.FIFO_DEPTH)_1  fifo_vif.wr_en                

----------------Focused Condition View-------------------
Line       19 Item    1  (fifo_vif.full_ref & fifo_vif.wr_en)
Condition totals: 1 of 2 input terms covered = 50.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  fifo_vif.full_ref         N  '_0' not hit             Hit '_0'
     fifo_vif.wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  fifo_vif.full_ref_0   fifo_vif.wr_en                
  Row   2:          1  fifo_vif.full_ref_1   fifo_vif.wr_en                
  Row   3:          1  fifo_vif.wr_en_0      fifo_vif.full_ref             
  Row   4:          1  fifo_vif.wr_en_1      fifo_vif.full_ref             

----------------Focused Condition View-------------------
Line       31 Item    1  (fifo_vif.rd_en && (count_n != 0))
Condition totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  fifo_vif.rd_en         Y
  (count_n != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rd_en_0      -                             
  Row   2:          1  fifo_vif.rd_en_1      (count_n != 0)                
  Row   3:          1  (count_n != 0)_0      fifo_vif.rd_en                
  Row   4:          1  (count_n != 0)_1      fifo_vif.rd_en                

----------------Focused Condition View-------------------
Line       35 Item    1  (fifo_vif.empty_ref & fifo_vif.rd_en)
Condition totals: 1 of 2 input terms covered = 50.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  fifo_vif.empty_ref         N  '_0' not hit             Hit '_0'
      fifo_vif.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  fifo_vif.empty_ref_0  fifo_vif.rd_en                
  Row   2:          1  fifo_vif.empty_ref_1  fifo_vif.rd_en                
  Row   3:          1  fifo_vif.rd_en_0      fifo_vif.empty_ref            
  Row   4:          1  fifo_vif.rd_en_1      fifo_vif.empty_ref            

----------------Focused Condition View-------------------
Line       48 Item    1  ((~fifo_vif.rd_en && fifo_vif.wr_en) && ~fifo_vif.full_ref)
Condition totals: 3 of 3 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
     fifo_vif.rd_en         Y
     fifo_vif.wr_en         Y
  fifo_vif.full_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rd_en_0      (~fifo_vif.full_ref && fifo_vif.wr_en)
  Row   2:          1  fifo_vif.rd_en_1      -                             
  Row   3:          1  fifo_vif.wr_en_0      ~fifo_vif.rd_en               
  Row   4:          1  fifo_vif.wr_en_1      (~fifo_vif.full_ref && ~fifo_vif.rd_en)
  Row   5:          1  fifo_vif.full_ref_0   (~fifo_vif.rd_en && fifo_vif.wr_en)
  Row   6:          1  fifo_vif.full_ref_1   (~fifo_vif.rd_en && fifo_vif.wr_en)

----------------Focused Condition View-------------------
Line       50 Item    1  ((fifo_vif.rd_en && ~fifo_vif.wr_en) && ~fifo_vif.empty_ref)
Condition totals: 3 of 3 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
      fifo_vif.rd_en         Y
      fifo_vif.wr_en         Y
  fifo_vif.empty_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rd_en_0      -                             
  Row   2:          1  fifo_vif.rd_en_1      (~fifo_vif.empty_ref && ~fifo_vif.wr_en)
  Row   3:          1  fifo_vif.wr_en_0      (~fifo_vif.empty_ref && fifo_vif.rd_en)
  Row   4:          1  fifo_vif.wr_en_1      fifo_vif.rd_en                
  Row   5:          1  fifo_vif.empty_ref_0  (fifo_vif.rd_en && ~fifo_vif.wr_en)
  Row   6:          1  fifo_vif.empty_ref_1  (fifo_vif.rd_en && ~fifo_vif.wr_en)

----------------Focused Condition View-------------------
Line       52 Item    1  ((fifo_vif.rd_en && fifo_vif.wr_en) && fifo_vif.full_ref)
Condition totals: 3 of 3 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
     fifo_vif.rd_en         Y
     fifo_vif.wr_en         Y
  fifo_vif.full_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rd_en_0      -                             
  Row   2:          1  fifo_vif.rd_en_1      (fifo_vif.full_ref && fifo_vif.wr_en)
  Row   3:          1  fifo_vif.wr_en_0      fifo_vif.rd_en                
  Row   4:          1  fifo_vif.wr_en_1      (fifo_vif.full_ref && fifo_vif.rd_en)
  Row   5:          1  fifo_vif.full_ref_0   (fifo_vif.rd_en && fifo_vif.wr_en)
  Row   6:          1  fifo_vif.full_ref_1   (fifo_vif.rd_en && fifo_vif.wr_en)

----------------Focused Condition View-------------------
Line       54 Item    1  ((fifo_vif.rd_en && fifo_vif.wr_en) && fifo_vif.empty_ref)
Condition totals: 3 of 3 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
      fifo_vif.rd_en         Y
      fifo_vif.wr_en         Y
  fifo_vif.empty_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  fifo_vif.rd_en_0      -                             
  Row   2:          1  fifo_vif.rd_en_1      (fifo_vif.empty_ref && fifo_vif.wr_en)
  Row   3:          1  fifo_vif.wr_en_0      fifo_vif.rd_en                
  Row   4:          1  fifo_vif.wr_en_1      (fifo_vif.empty_ref && fifo_vif.rd_en)
  Row   5:          1  fifo_vif.empty_ref_0  (fifo_vif.rd_en && fifo_vif.wr_en)
  Row   6:          1  fifo_vif.empty_ref_1  (fifo_vif.rd_en && fifo_vif.wr_en)

----------------Focused Condition View-------------------
Line       59 Item    1  (count_n == fifo_vif.FIFO_DEPTH)
Condition totals: 1 of 1 input term covered = 100.00%

                        Input Term   Covered  Reason for no coverage   Hint
                       -----------  --------  -----------------------  --------------
  (count_n == fifo_vif.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                          Non-masking condition(s)      
 ---------  ---------  --------------------                -------------------------     
  Row   1:          1  (count_n == fifo_vif.FIFO_DEPTH)_0  -                             
  Row   2:          1  (count_n == fifo_vif.FIFO_DEPTH)_1  -                             

----------------Focused Condition View-------------------
Line       60 Item    1  (count_n == 0)
Condition totals: 1 of 1 input term covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (count_n == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_n == 0)_0      -                             
  Row   2:          1  (count_n == 0)_1      -                             

----------------Focused Condition View-------------------
Line       61 Item    1  (count_n == (fifo_vif.FIFO_DEPTH - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                              Input Term   Covered  Reason for no coverage   Hint
                             -----------  --------  -----------------------  --------------
  (count_n == (fifo_vif.FIFO_DEPTH - 1))         Y

     Rows:       Hits  FEC Target                                Non-masking condition(s)      
 ---------  ---------  --------------------                      -------------------------     
  Row   1:          1  (count_n == (fifo_vif.FIFO_DEPTH - 1))_0  -                             
  Row   2:          1  (count_n == (fifo_vif.FIFO_DEPTH - 1))_1  -                             

----------------Focused Condition View-------------------
Line       62 Item    1  (count_n == 1)
Condition totals: 1 of 1 input term covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (count_n == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_n == 1)_0      -                             
  Row   2:          1  (count_n == 1)_1      -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      25        25         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT_gold --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File fifo_reference_model.sv
    1                                                module fifo_reference_model(fifo_if.DUT_gold fifo_vif);
    2                                                
    3                                                  	int count_n;
    4                                                	bit [fifo_vif.FIFO_WIDTH-1:0] rd_wr[$] ;
    5                                                	
    6               1                       1519     	always @(posedge fifo_vif.clk or negedge fifo_vif.rst_n) begin
    7                                                			if (!fifo_vif.rst_n) begin
    8               1                         38     				fifo_vif.overflow_ref <= 0;
    9               1                         38     				fifo_vif.wr_ack_ref <= 0;
    10              1                         38     				rd_wr.delete();
    11                                               			end
    12                                               			else if (fifo_vif.wr_en && count_n < fifo_vif.FIFO_DEPTH) begin
    13              1                        255     				rd_wr.push_back(fifo_vif.data_in);
    14              1                        255     				fifo_vif.wr_ack_ref <= 1;
    15                                               				
    16                                               			end
    17                                               			else begin 
    18              1                       1226     				fifo_vif.wr_ack_ref <= 0; 
    19                                               				if (fifo_vif.full_ref & fifo_vif.wr_en)
    20              1                        596     					fifo_vif.overflow_ref <= 1;
    21                                               				else
    22              1                        630     					fifo_vif.overflow_ref <= 0;	
    23                                               			end
    24                                               	end
    25                                               
    26              1                       1519     	always @(posedge fifo_vif.clk or negedge fifo_vif.rst_n) begin
    27                                               			if (!fifo_vif.rst_n) begin
    28              1                         38     			  	fifo_vif.data_out_ref <= 0;
    29              1                         38     				fifo_vif.underflow_ref <= 0;
    30                                                   		end
    31                                                   		else if (fifo_vif.rd_en && count_n != 0) begin
    32              1                        151     			    fifo_vif.data_out_ref <= rd_wr.pop_front();
    33                                                   		end
    34                                               			else begin 
    35                                               				if (fifo_vif.empty_ref & fifo_vif.rd_en)
    36              1                        496     					fifo_vif.underflow_ref <= 1;
    37                                               				else
    38              1                        834     					fifo_vif.underflow_ref <= 0;
    39                                               			end		
    40                                               	end
    41                                               
    42              1                        477     	always @(posedge fifo_vif.clk or negedge fifo_vif.rst_n) begin
    43                                                       if (!fifo_vif.rst_n) begin
    44              1                         38     	        count_n <= 0;
    45                                                       end
    46                                                   
    47                                                       else begin
    48                                               	        if	( ({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b10) && !fifo_vif.full_ref) 
    49              1                        181     	    	    count_n  <= count_n + 1;
    50                                               	        else if ( ({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b01) && !fifo_vif.empty_ref)
    51              1                         47     	    	    count_n  <= count_n - 1;
    52                                                           else if (({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b11) && fifo_vif.full_ref)     
    53              1                         33     	        	count_n  <= count_n - 1;
    54                                               	        else if (({fifo_vif.wr_en, fifo_vif.rd_en} == 2'b11) && fifo_vif.empty_ref)      
    55              1                          3     	        	count_n  <= count_n + 1;				
    56                                                       end
    57                                               	end
    58                                               
    59              1                        282         assign fifo_vif.full_ref = (count_n == fifo_vif.FIFO_DEPTH)? 1 : 0;
    60              1                        282         assign fifo_vif.empty_ref = (count_n == 0)? 1 : 0; 
    61              1                        282         assign fifo_vif.almostfull_ref = (count_n == fifo_vif.FIFO_DEPTH-1)? 1 : 0; 
    62              1                        282         assign fifo_vif.almostempty_ref = (count_n == 1)? 1 : 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         64         8        56    12.50%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT_gold --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                     count_n[31-4]           0           0        0.00 
                                      count_n[3-0]           1           1      100.00 

Total Node Count     =         32 
Toggled Node Count   =          4 
Untoggled Node Count =         28 

Toggle Coverage      =      12.50% (8 of 64 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       5         5         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File top.sv
    5                                                module top ();
    6                                                    bit clk;
    7                                                
    8                                                    initial begin
    9               1                          1             forever begin
    10              1                       3003                 #1 clk = ~clk;
    10              2                       3002     
    11                                                       end
    12                                                   end    
    13                                               
    14                                                   fifo_if fifo_vif (clk);
    15                                                   FIFO_DUT DUT (fifo_vif);
    16                                                   fifo_reference_model DUT_gold (fifo_vif);
    17                                                   bind FIFO_DUT fifo_assert fifo_assert_dut(fifo_vif);
    18                                               
    19                                                   initial begin
    20              1                          1             uvm_config_db #(virtual fifo_if)::set(null , "uvm_test_top" , "FIFO_IF", fifo_vif);
    21              1                          1             run_test("fifo_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /fifo_seq_pkg
=== Design Unit: work.fifo_seq_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /fifo_seq_pkg
NOTE: The modification timestamp for source file 'sequence_item.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence_item.sv
------------------------------------IF Branch------------------------------------
    11                                   ***0***     Count coming in to IF
    11              1                    ***0***         `uvm_object_utils(fifo_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    11                                      1501     Count coming in to IF
    11              2                    ***0***         `uvm_object_utils(fifo_seq_item)
                                            1501     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    11                                   ***0***     Count coming in to IF
    11              3                    ***0***         `uvm_object_utils(fifo_seq_item)
    11              4                    ***0***         `uvm_object_utils(fifo_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    11                                      1501     Count coming in to IF
    11              5                    ***0***         `uvm_object_utils(fifo_seq_item)
                                            1501     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    11                                   ***0***     Count coming in to IF
    11              6                    ***0***         `uvm_object_utils(fifo_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_seq_pkg --
NOTE: The modification timestamp for source file 'sequence_item.sv' has been altered since compilation.

  File sequence_item.sv
----------------Focused Condition View-------------------
Line       11 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       11 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         3        10    23.07%

================================Statement Details================================

Statement Coverage for instance /fifo_seq_pkg --
NOTE: The modification timestamp for source file 'sequence_item.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence_item.sv
    1                                                package fifo_seq_pkg; 
    2                                                   `include "uvm_macros.svh"
    3                                                   import uvm_pkg::*;
    4                                                   
    5                                                    parameter FIFO_WIDTH = 16;
    6                                                    parameter FIFO_DEPTH = 8;
    7                                                    int error_count = 0;
    8                                                    int correct_count = 0;
    9                                                
    10                                               class fifo_seq_item extends uvm_sequence_item;
    11              1                    ***0***         `uvm_object_utils(fifo_seq_item)
    11              2                    ***0***     
    11              3                    ***0***     
    11              4                    ***0***     
    11              5                    ***0***     
    11              6                       1501     
    11              7                    ***0***     
    11              8                    ***0***     
    11              9                       1501     
    11             10                    ***0***     
    12                                                   
    13                                                   rand bit wr_en, rd_en, rst_n;
    14                                                   rand bit [FIFO_WIDTH-1:0] data_in;
    15                                                   bit [FIFO_WIDTH-1:0] data_out,data_out_ref;
    16                                                   bit full, empty, almostfull,almostempty,wr_ack, overflow, underflow;
    17                                                   bit full_ref, empty_ref, almostfull_ref, almostempty_ref, wr_ack_ref, overflow_ref, underflow_ref;
    18                                               
    19                                                   function new(string name = "fifo_sequence_item");
    20              1                       4505             super.new(name);
    21                                                   endfunction
    22                                               
    23                                                   function string convert2string();
    24              1                    ***0***             return $sformatf("%s wr_en = 0b%0b , rd_en = 0b%0b , rst_n = 0b%0b , data_in = 0b%0b , data_out = 0b%0b , full = 0b%0b , empty = 0b%0b , almostfull = 0b%0b , almostempty = 0b%0b , wr_ack = 0b%0b , overflow = 0b%0b , underflow = 0b%0b , full_ref = 0b%0b , empty_ref = 0b%0b , almostfull_ref = 0b%0b  , almostempty_ref = 0b%0b , wr_ack_ref = 0b%0b , overflow_ref = 0b%0b , underflow_ref = 0b%0b ", super.convert2string(),wr_en , rd_en , rst_n , data_in , data_out , full , empty , almostfull , almostempty , wr_ack , overflow , underflow ,full_ref, empty_ref, almostfull_ref, almostempty_ref, wr_ack_ref, overflow_ref, underflow_ref);
    25                                                   endfunction
    26                                               
    27                                                   function string convert2string_stimulus();
    28              1                    ***0***             return $sformatf("wr_en = 0b%0b , rd_en = 0b%0b , rst_n = 0b%0b , data_in = 0b%0b ", wr_en , rd_en , rst_n , data_in);


=================================================================================
=== Instance: /fifo_seq_pkg_reset
=== Design Unit: work.fifo_seq_pkg_reset
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /fifo_seq_pkg_reset

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File reset_seq.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(fifo_seq_item_reset)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          1     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(fifo_seq_item_reset)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(fifo_seq_item_reset)
    7               4                    ***0***             `uvm_object_utils(fifo_seq_item_reset)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          1     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(fifo_seq_item_reset)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(fifo_seq_item_reset)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_seq_pkg_reset --

  File reset_seq.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /fifo_seq_pkg_reset --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File reset_seq.sv
    1                                                package fifo_seq_pkg_reset;
    2                                                    import uvm_pkg::*;
    3                                                    import fifo_seq_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class fifo_seq_item_reset extends uvm_sequence#(fifo_seq_item);
    7               1                    ***0***             `uvm_object_utils(fifo_seq_item_reset)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                          1     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                          1     
    7              10                    ***0***     
    8                                                        fifo_seq_item seq_item_rst;
    9                                                
    10                                                       function new(string name = "fifo_seq_item_reset");
    11              1                          1                 super.new(name);
    12                                                       endfunction
    13                                               
    14                                                       task body;
    15              1                          1             seq_item_rst = fifo_seq_item::type_id::create("seq_item_rst");
    16              1                          1             start_item(seq_item_rst);
    17              1                          1             seq_item_rst.rst_n=0;             
    18              1                          1             seq_item_rst.data_in=0;      
    19              1                          1             seq_item_rst.wr_en=0;           
    20              1                          1             seq_item_rst.rd_en=0;
    21              1                          1             finish_item(seq_item_rst);


=================================================================================
=== Instance: /fifo_seq_read_write
=== Design Unit: work.fifo_seq_read_write
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/fifo_seq_read_write/write_read_sequence/body/#ublk#180710693#15/immed__22
                     read_write_seq.sv(22)              0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /fifo_seq_read_write

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File read_write_seq.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(write_read_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          1     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(write_read_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(write_read_sequence)
    7               4                    ***0***             `uvm_object_utils(write_read_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          1     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(write_read_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(write_read_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_seq_read_write --

  File read_write_seq.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        11         8    57.89%

================================Statement Details================================

Statement Coverage for instance /fifo_seq_read_write --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File read_write_seq.sv
    1                                                package fifo_seq_read_write;
    2                                                    import uvm_pkg::*;
    3                                                    import fifo_seq_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class write_read_sequence extends uvm_sequence#(fifo_seq_item);
    7               1                    ***0***             `uvm_object_utils(write_read_sequence)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                          1     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                          1     
    7              10                    ***0***     
    8                                                
    9                                                        function new(string name = "write_read_sequence");
    10              1                          1                 super.new(name);
    11                                                       endfunction
    12                                                       
    13                                                       task body;
    14                                                           fifo_seq_item seq_item;
    15              1                        500                 repeat(500) begin 
    16              1                        500                     seq_item = fifo_seq_item::type_id::create("seq_item");
    17              1                        500                     start_item(seq_item);
    18              1                        500                     seq_item.constraint_mode(1);
    19              1                        500                     seq_item.data_in.rand_mode(1);
    20              1                        500                     seq_item.read_only.constraint_mode(0);
    21              1                        500                     seq_item.write_only.constraint_mode(0);
    22                                                               assert(seq_item.randomize());
    23              1                        500                     finish_item(seq_item);


=================================================================================
=== Instance: /fifo_seq_read
=== Design Unit: work.fifo_seq_read
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/fifo_seq_read/read_only_sequence/body/#ublk#11263364#17/immed__23
                     read_seq.sv(23)                    0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /fifo_seq_read
NOTE: The modification timestamp for source file 'read_seq.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File read_seq.sv
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             function new(string name = "read_only_sequence");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               2                    ***0***             function new(string name = "read_only_sequence");
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             function new(string name = "read_only_sequence");
    9               4                    ***0***             function new(string name = "read_only_sequence");
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               5                    ***0***             function new(string name = "read_only_sequence");
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             function new(string name = "read_only_sequence");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_seq_read --
NOTE: The modification timestamp for source file 'read_seq.sv' has been altered since compilation.

  File read_seq.sv
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /fifo_seq_read --
NOTE: The modification timestamp for source file 'read_seq.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File read_seq.sv
    3                                                    import fifo_seq_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class read_only_sequence extends uvm_sequence#(fifo_seq_item);
    7                                                        `uvm_object_utils(read_only_sequence)
    8                                                
    9               1                    ***0***             function new(string name = "read_only_sequence");
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          1     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          1     
    9              10                    ***0***     
    10                                                           super.new(name);
    11                                                       endfunction
    12              1                          1             
    13                                                           task body;
    14                                                               fifo_seq_item rd_seq_item;
    15                                                               repeat(500) begin 
    16                                                               rd_seq_item = fifo_seq_item::type_id::create("rd_seq_item");
    17              1                        500                     start_item(rd_seq_item);
    18              1                        500                     rd_seq_item.constraint_mode(0);
    19              1                        500                     rd_seq_item.data_in.rand_mode(0);
    20              1                        500                     rd_seq_item.read_only.constraint_mode(1);
    21              1                        500                     assert(rd_seq_item.randomize());
    22              1                        500                     finish_item(rd_seq_item);
    23                                                               end
    24              1                        500                 endtask


=================================================================================
=== Instance: /fifo_seq_write
=== Design Unit: work.fifo_seq_write
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/fifo_seq_write/write_only_sequence/body/#ublk#180092837#16/immed__21
                     write_seq.sv(21)                   0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /fifo_seq_write
NOTE: The modification timestamp for source file 'write_seq.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File write_seq.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***     
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***     
    8               4                    ***0***     
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***     
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***     
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_seq_write --
NOTE: The modification timestamp for source file 'write_seq.sv' has been altered since compilation.

  File write_seq.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         9         8    52.94%

================================Statement Details================================

Statement Coverage for instance /fifo_seq_write --
NOTE: The modification timestamp for source file 'write_seq.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File write_seq.sv
    2                                                    import uvm_pkg::*;
    3                                                    import fifo_seq_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class write_only_sequence extends uvm_sequence#(fifo_seq_item);
    7                                                        `uvm_object_utils(write_only_sequence)
    8               1                    ***0***     
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                        function new(string name = "write_only_sequence");
    10                                                           super.new(name);
    11              1                          1             endfunction
    12                                                       
    13                                                       task body;
    14                                                       fifo_seq_item wr_seq_item;
    15                                                       repeat(500) begin 
    16              1                        500                 wr_seq_item = fifo_seq_item::type_id::create("wr_seq_item");
    17              1                        500                 start_item(wr_seq_item);
    18              1                        500                   wr_seq_item.constraint_mode(0);
    19              1                        500                   wr_seq_item.write_only.constraint_mode(1);
    20              1                        500                   assert(wr_seq_item.randomize());
    21                                                           finish_item(wr_seq_item);
    22              1                        500                 end


=================================================================================
=== Instance: /fifo_scoreboard_pkg
=== Design Unit: work.fifo_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         4         6    40.00%

================================Branch Details================================

Branch Coverage for instance /fifo_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File score_board.sv
------------------------------------IF Branch------------------------------------
    35                                      1501     Count coming in to IF
    35              1                    ***0***                 if (seq_item_sb.data_out_ref !== seq_item_sb.data_out || seq_item_sb.full_ref !== seq_item_sb.full || seq_item_sb.empty_ref !== seq_item_sb.empty || seq_item_sb.almostfull_ref !== seq_item_sb.almostfull || seq_item_sb.almostempty_ref !== seq_item_sb.almostempty || seq_item_sb.wr_ack_ref !== seq_item_sb.wr_ack || seq_item_sb.overflow_ref !== seq_item_sb.overflow || seq_item_sb.underflow_ref !== seq_item_sb.underflow) begin
    39              1                       1501                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    36                                   ***0***     Count coming in to IF
    36              1                    ***0***                     `uvm_error("run_phase", $sformatf("Comparsion Failed , Transaction received by the DUT:%s" , seq_item_sb.convert2string()));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    40                                      1501     Count coming in to IF
    40              1                    ***0***                     `uvm_info("run_phase" , $sformatf("Correct out: %s" , seq_item_sb.convert2string()) , UVM_HIGH);
                                            1501     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    48                                         1     Count coming in to IF
    48              1                          1             `uvm_info("report_phase" , $sformatf("Total Successful transaction: %0d" , correct_count) , UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    49                                         1     Count coming in to IF
    49              1                          1             `uvm_info("report_phase" , $sformatf("Total Failed transaction: %0d" , error_count) , UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       8         0         8     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_scoreboard_pkg --

  File score_board.sv
----------------Focused Condition View-------------------
Line       35 Item    1  ((this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) || (this.seq_item_sb.full_ref !== this.seq_item_sb.full) || (this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) || (this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) || (this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty) || (this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack) || (this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow) || (this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow))
Condition totals: 0 of 8 input terms covered = 0.00%

                                                           Input Term   Covered  Reason for no coverage   Hint
                                                          -----------  --------  -----------------------  --------------
        (this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out)         N  '_1' not hit             Hit '_1'
                (this.seq_item_sb.full_ref !== this.seq_item_sb.full)         N  '_1' not hit             Hit '_1'
              (this.seq_item_sb.empty_ref !== this.seq_item_sb.empty)         N  '_1' not hit             Hit '_1'
    (this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull)         N  '_1' not hit             Hit '_1'
  (this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty)         N  '_1' not hit             Hit '_1'
            (this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack)         N  '_1' not hit             Hit '_1'
        (this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow)         N  '_1' not hit             Hit '_1'
      (this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                                   -------------------------     
  Row   1:          1  (this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out)_0        ~((this.seq_item_sb.full_ref !== this.seq_item_sb.full) || ((this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) || ((this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) || ((this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty) || ((this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack) || ((this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow) || (this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow)))))))
  Row   2:    ***0***  (this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out)_1        -                             
  Row   3:          1  (this.seq_item_sb.full_ref !== this.seq_item_sb.full)_0                (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~((this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) || ((this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) || ((this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty) || ((this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack) || ((this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow) || (this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow)))))))
  Row   4:    ***0***  (this.seq_item_sb.full_ref !== this.seq_item_sb.full)_1                ~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out)
  Row   5:          1  (this.seq_item_sb.empty_ref !== this.seq_item_sb.empty)_0              (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~((this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) || ((this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty) || ((this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack) || ((this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow) || (this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow))))))
  Row   6:    ***0***  (this.seq_item_sb.empty_ref !== this.seq_item_sb.empty)_1              (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full))
  Row   7:          1  (this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull)_0    (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~(this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) && ~((this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty) || ((this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack) || ((this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow) || (this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow)))))
  Row   8:    ***0***  (this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull)_1    (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~(this.seq_item_sb.empty_ref !== this.seq_item_sb.empty))
  Row   9:          1  (this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty)_0  (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~(this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) && ~(this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) && ~((this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack) || ((this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow) || (this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow))))
 Row   10:    ***0***  (this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty)_1  (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~(this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) && ~(this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull))
 Row   11:          1  (this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack)_0            (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~(this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) && ~(this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) && ~(this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty) && ~((this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow) || (this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow)))
 Row   12:    ***0***  (this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack)_1            (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~(this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) && ~(this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) && ~(this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty))
 Row   13:          1  (this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow)_0        (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~(this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) && ~(this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) && ~(this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty) && ~(this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack) && ~(this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow))
 Row   14:    ***0***  (this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow)_1        (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~(this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) && ~(this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) && ~(this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty) && ~(this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack))
 Row   15:          1  (this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow)_0      (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~(this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) && ~(this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) && ~(this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty) && ~(this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack) && ~(this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow))
 Row   16:    ***0***  (this.seq_item_sb.underflow_ref !== this.seq_item_sb.underflow)_1      (~(this.seq_item_sb.data_out_ref !== this.seq_item_sb.data_out) && ~(this.seq_item_sb.full_ref !== this.seq_item_sb.full) && ~(this.seq_item_sb.empty_ref !== this.seq_item_sb.empty) && ~(this.seq_item_sb.almostfull_ref !== this.seq_item_sb.almostfull) && ~(this.seq_item_sb.almostempty_ref !== this.seq_item_sb.almostempty) && ~(this.seq_item_sb.wr_ack_ref !== this.seq_item_sb.wr_ack) && ~(this.seq_item_sb.overflow_ref !== this.seq_item_sb.overflow))


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      21        16         5    76.19%

================================Statement Details================================

Statement Coverage for instance /fifo_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File score_board.sv
    1                                                package fifo_scoreboard_pkg;
    2                                                import fifo_seq_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class fifo_scoreboard extends uvm_component;
    7               1                    ***0***     `uvm_component_utils(fifo_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                    uvm_analysis_export #(fifo_seq_item) score_export;
    10                                                   uvm_tlm_analysis_fifo #(fifo_seq_item) sb_fifo;
    11                                                   fifo_seq_item seq_item_sb;
    12                                               
    13              1                          1         int error_count = 0;
    14              1                          1         int correct_count = 0;
    15                                               
    16                                                   function new(string name = "fifo_scoreboard" , uvm_component parent = null);
    17              1                          1             super.new(name , parent);
    18                                                   endfunction 
    19                                               
    20                                                   function void build_phase(uvm_phase phase);
    21              1                          1             super.build_phase(phase);
    22              1                          1             score_export = new("score_export" , this);
    23              1                          1             sb_fifo = new("sb_fifo" , this);
    24                                                   endfunction: build_phase
    25                                               
    26                                                   function void connect_phase(uvm_phase phase);
    27              1                          1             super.connect_phase(phase);
    28              1                          1             score_export.connect(sb_fifo.analysis_export);
    29                                                   endfunction    
    30                                               
    31                                                   task run_phase(uvm_phase phase);
    32              1                          1             super.run_phase(phase);
    33              1                          1             forever begin
    34              1                       1502                 sb_fifo.get(seq_item_sb);
    35                                                           if (seq_item_sb.data_out_ref !== seq_item_sb.data_out || seq_item_sb.full_ref !== seq_item_sb.full || seq_item_sb.empty_ref !== seq_item_sb.empty || seq_item_sb.almostfull_ref !== seq_item_sb.almostfull || seq_item_sb.almostempty_ref !== seq_item_sb.almostempty || seq_item_sb.wr_ack_ref !== seq_item_sb.wr_ack || seq_item_sb.overflow_ref !== seq_item_sb.overflow || seq_item_sb.underflow_ref !== seq_item_sb.underflow) begin
    36              1                    ***0***                     `uvm_error("run_phase", $sformatf("Comparsion Failed , Transaction received by the DUT:%s" , seq_item_sb.convert2string()));
    37              1                    ***0***                     error_count++;
    38                                                           end
    39                                                           else begin
    40              1                    ***0***                     `uvm_info("run_phase" , $sformatf("Correct out: %s" , seq_item_sb.convert2string()) , UVM_HIGH);
    41              1                       1501                     correct_count++; 
    42                                                           end
    43                                                       end
    44                                                   endtask: run_phase
    45                                               
    46                                                   function void report_phase(uvm_phase phase);
    47              1                          1             super.report_phase(phase);
    48              1                          1             `uvm_info("report_phase" , $sformatf("Total Successful transaction: %0d" , correct_count) , UVM_MEDIUM);
    49              1                          1             `uvm_info("report_phase" , $sformatf("Total Failed transaction: %0d" , error_count) , UVM_MEDIUM);


=================================================================================
=== Instance: /fifo_coverage_pkg
=== Design Unit: work.fifo_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         20        na        na        na
            Covergroup Bins         48        48         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /fifo_coverage_pkg/fifo_coverage/cg             100.00%        100          -    Covered              
    covered/total bins:                                    48         48          -                      
    missing/total bins:                                     0         48          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint #coverpoint__0#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_en_active                                  867          1          -    Covered              
        bin wr_en_inactive                                634          1          -    Covered              
    Coverpoint #coverpoint__1#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin rd_en_active                                  653          1          -    Covered              
        bin rd_en_inactive                                848          1          -    Covered              
    Coverpoint #coverpoint__2#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin full_active                                   644          1          -    Covered              
        bin full_inactive                                 857          1          -    Covered              
    Coverpoint #coverpoint__3#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin empty_active                                  520          1          -    Covered              
        bin empty_inactive                                981          1          -    Covered              
    Coverpoint #coverpoint__4#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostfull_active                             109          1          -    Covered              
        bin almostfull_inactive                          1392          1          -    Covered              
    Coverpoint #coverpoint__5#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostempty_active                             48          1          -    Covered              
        bin almostempty_inactive                         1453          1          -    Covered              
    Coverpoint #coverpoint__6#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin overflow_active                               623          1          -    Covered              
        bin overflow_inactive                             878          1          -    Covered              
    Coverpoint #coverpoint__7#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin underflow_active                              497          1          -    Covered              
        bin underflow_inactive                           1004          1          -    Covered              
    Coverpoint #fifo_seq_cov.rd_en__8#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       848          1          -    Covered              
        bin auto[1]                                       653          1          -    Covered              
    Coverpoint #fifo_seq_cov.almostempty__9#          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1453          1          -    Covered              
        bin auto[1]                                        48          1          -    Covered              
    Coverpoint #fifo_seq_cov.wr_en__10#               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       634          1          -    Covered              
        bin auto[1]                                       867          1          -    Covered              
    Coverpoint #fifo_seq_cov.almostfull__11#          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1392          1          -    Covered              
        bin auto[1]                                       109          1          -    Covered              
    Coverpoint #fifo_seq_cov.rd_en__12#               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       848          1          -    Covered              
        bin auto[1]                                       653          1          -    Covered              
    Coverpoint #fifo_seq_cov.empty__13#               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       981          1          -    Covered              
        bin auto[1]                                       520          1          -    Covered              
    Coverpoint #fifo_seq_cov.wr_en__14#               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       634          1          -    Covered              
        bin auto[1]                                       867          1          -    Covered              
    Coverpoint #fifo_seq_cov.full__15#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       857          1          -    Covered              
        bin auto[1]                                       644          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                         621          1          -    Covered              
            bin <auto[0],auto[1]>                          23          1          -    Covered              
            bin <auto[1],auto[0]>                         246          1          -    Covered              
            bin <auto[0],auto[0]>                         611          1          -    Covered              
    Cross #cross__1#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                         503          1          -    Covered              
            bin <auto[0],auto[1]>                          17          1          -    Covered              
            bin <auto[1],auto[0]>                         150          1          -    Covered              
            bin <auto[0],auto[0]>                         831          1          -    Covered              
    Cross #cross__2#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          74          1          -    Covered              
            bin <auto[0],auto[1]>                          35          1          -    Covered              
            bin <auto[1],auto[0]>                         793          1          -    Covered              
            bin <auto[0],auto[0]>                         599          1          -    Covered              
    Cross #cross__3#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          19          1          -    Covered              
            bin <auto[0],auto[1]>                          29          1          -    Covered              
            bin <auto[1],auto[0]>                         634          1          -    Covered              
            bin <auto[0],auto[0]>                         819          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /fifo_coverage_pkg --
NOTE: The modification timestamp for source file 'coverage.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File coverage.sv
    1                                                package fifo_coverage_pkg;
    2                                                    import fifo_seq_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class fifo_coverage extends uvm_component;
    7               1                    ***0***             `uvm_component_utils(fifo_coverage)
    7               2                    ***0***     
    7               3                          2     
    8                                                         fifo_seq_item fifo_seq_cov;
    9                                                        uvm_analysis_export #(fifo_seq_item) cov_export;
    10                                                       uvm_tlm_analysis_fifo #(fifo_seq_item) cov_fifo;
    11                                                       
    12                                                       covergroup cg ;
    13                                                           coverpoint fifo_seq_cov.wr_en {
    14                                                               bins wr_en_active = {1'b1};
    15                                                               bins wr_en_inactive = {1'b0};
    16                                                           }
    17                                                           
    18                                                           coverpoint fifo_seq_cov.rd_en {
    19                                                               bins rd_en_active = {1'b1};
    20                                                               bins rd_en_inactive = {1'b0};
    21                                                           }
    22                                                           
    23                                                           coverpoint fifo_seq_cov.full {
    24                                                               bins full_active = {1'b1};
    25                                                               bins full_inactive = {1'b0};
    26                                                           }
    27                                                           
    28                                                           coverpoint fifo_seq_cov.empty {
    29                                                               bins empty_active = {1'b1};
    30                                                               bins empty_inactive = {1'b0};
    31                                                           }
    32                                                           
    33                                                           coverpoint fifo_seq_cov.almostfull {
    34                                                               bins almostfull_active = {1'b1};
    35                                                               bins almostfull_inactive = {1'b0};
    36                                                           }
    37                                                           
    38                                                           coverpoint fifo_seq_cov.almostempty {
    39                                                               bins almostempty_active = {1'b1};
    40                                                               bins almostempty_inactive = {1'b0};
    41                                                           }
    42                                                           
    43                                                           coverpoint fifo_seq_cov.overflow {
    44                                                               bins overflow_active = {1'b1};
    45                                                               bins overflow_inactive = {1'b0};
    46                                                           }
    47                                                           
    48                                                           coverpoint fifo_seq_cov.underflow {
    49                                                               bins underflow_active = {1'b1};
    50                                                               bins underflow_inactive = {1'b0};
    51                                                           }
    52                                               
    53                                                           cross fifo_seq_cov.wr_en, fifo_seq_cov.full;
    54                                                           cross fifo_seq_cov.rd_en, fifo_seq_cov.empty;
    55                                                           cross fifo_seq_cov.wr_en, fifo_seq_cov.almostfull;
    56                                                           cross fifo_seq_cov.rd_en, fifo_seq_cov.almostempty;
    57                                                       endgroup
    58                                               
    59                                                       function new(string name = "fifo_coverage", uvm_component parent = null);
    60                                                           super.new(name, parent);
    61                                                           cg = new();
    62                                                       endfunction
    63                                               
    64              1                          1             function void build_phase(uvm_phase phase);
    65              1                          1                 super.build_phase(phase);
    66                                                           cov_export = new("cov_export", this);
    67                                                           cov_fifo = new("cov_fifo", this);
    68                                                       endfunction
    69              1                          1     
    70              1                          1             function void connect_phase(uvm_phase phase);
    71              1                          1                 super.connect_phase(phase);
    72                                                           cov_export.connect(cov_fifo.analysis_export);
    73                                                       endfunction
    74                                               
    75              1                          1             task run_phase(uvm_phase phase);
    76              1                          1                 super.run_phase(phase);
    77                                                           forever begin
    78                                                               cov_fifo.get(fifo_seq_cov);
    79                                                               cg.sample(); 
    80              1                          1                 end
    81              1                          1             endtask
    82              1                       1502         endclass
    83              1                       1501     endpackage


=================================================================================
=== Instance: /fifo_sequencer_pkg
=== Design Unit: work.fifo_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /fifo_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequencer.sv
    1                                                package fifo_sequencer_pkg;
    2                                                    import fifo_seq_pkg::*;
    3                                                    import uvm_pkg::*;
    4                                                    `include "uvm_macros.svh"
    5                                                
    6                                                    class fifo_sequencer extends uvm_sequencer #(fifo_seq_item);
    7               1                    ***0***             `uvm_component_utils(fifo_sequencer)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        function new(string name = "fifo_sequencer", uvm_component parent = null);
    10              1                          1                 super.new(name, parent);


=================================================================================
=== Instance: /fifo_monitor_pkg
=== Design Unit: work.fifo_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /fifo_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.sv
------------------------------------IF Branch------------------------------------
    48                                      1501     Count coming in to IF
    48              1                    ***0***                 `uvm_info("run_phase", seq_item_mon.convert2string(), UVM_HIGH)
                                            1501     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      32        29         3    90.62%

================================Statement Details================================

Statement Coverage for instance /fifo_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.sv
    1                                                package fifo_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import fifo_seq_pkg::*;
    5                                                
    6                                                    class fifo_monitor extends uvm_monitor;
    7               1                    ***0***             `uvm_component_utils(fifo_monitor)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        virtual fifo_if fifo_vif;   
    10                                                       uvm_analysis_port #(fifo_seq_item) mon_ap;  
    11                                                       fifo_seq_item seq_item_mon;
    12                                               
    13                                                       function new(string name = "fifo_monitor", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction
    16                                               
    17                                                       function void build_phase(uvm_phase phase);
    18              1                          1                 super.build_phase(phase);
    19              1                          1                 mon_ap = new("mon_ap", this);
    20                                                       endfunction
    21                                               
    22                                                       task run_phase(uvm_phase phase);
    23              1                          1                 super.run_phase(phase); 
    24              1                          1                 forever begin
    25              1                       1502                 seq_item_mon = fifo_seq_item::type_id::create("seq_item_mon");
    26              1                       1502                 @(negedge fifo_vif.clk);
    27              1                       1501                 seq_item_mon.rst_n = fifo_vif.rst_n;
    28              1                       1501                 seq_item_mon.wr_en = fifo_vif.wr_en;
    29              1                       1501                 seq_item_mon.rd_en = fifo_vif.rd_en;
    30              1                       1501                 seq_item_mon.data_in = fifo_vif.data_in;
    31              1                       1501                 seq_item_mon.data_out = fifo_vif.data_out;
    32              1                       1501                 seq_item_mon.full = fifo_vif.full;
    33              1                       1501                 seq_item_mon.empty = fifo_vif.empty;
    34              1                       1501                 seq_item_mon.almostfull = fifo_vif.almostfull;
    35              1                       1501                 seq_item_mon.almostempty = fifo_vif.almostempty;
    36              1                       1501                 seq_item_mon.wr_ack = fifo_vif.wr_ack;
    37              1                       1501                 seq_item_mon.overflow = fifo_vif.overflow;
    38              1                       1501                 seq_item_mon.underflow = fifo_vif.underflow;
    39              1                       1501                 seq_item_mon.data_out_ref = fifo_vif.data_out_ref;
    40              1                       1501                 seq_item_mon.full_ref = fifo_vif.full_ref;
    41              1                       1501                 seq_item_mon.empty_ref = fifo_vif.empty_ref;
    42              1                       1501                 seq_item_mon.almostfull_ref = fifo_vif.almostfull_ref;
    43              1                       1501                 seq_item_mon.almostempty_ref = fifo_vif.almostempty_ref;
    44              1                       1501                 seq_item_mon.wr_ack_ref = fifo_vif.wr_ack_ref;
    45              1                       1501                 seq_item_mon.overflow_ref = fifo_vif.overflow_ref;
    46              1                       1501                 seq_item_mon.underflow_ref = fifo_vif.underflow_ref;
    47              1                       1501                 mon_ap.write(seq_item_mon);
    48              1                    ***0***                 `uvm_info("run_phase", seq_item_mon.convert2string(), UVM_HIGH)


=================================================================================
=== Instance: /fifo_config_pkg
=== Design Unit: work.fifo_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /fifo_config_pkg
NOTE: The modification timestamp for source file 'config.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***             `uvm_object_utils(fifo_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***             `uvm_object_utils(fifo_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***             `uvm_object_utils(fifo_config)
    5               4                    ***0***             `uvm_object_utils(fifo_config)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***             `uvm_object_utils(fifo_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***             `uvm_object_utils(fifo_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_config_pkg --
NOTE: The modification timestamp for source file 'config.sv' has been altered since compilation.

  File config.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /fifo_config_pkg --
NOTE: The modification timestamp for source file 'config.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config.sv
    1                                                package fifo_config_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    class fifo_config extends uvm_object;
    5               1                    ***0***             `uvm_object_utils(fifo_config)
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                        virtual fifo_if fifo_vif;  
    7                                                        function new(string name = "fifo_config");
    8                                                            super.new(name);
    9                                                        endfunction
    10              1                          1         endclass


=================================================================================
=== Instance: /fifo_driver_pkg
=== Design Unit: work.fifo_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /fifo_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File driver.sv
------------------------------------IF Branch------------------------------------
    43                                      1501     Count coming in to IF
    43              1                    ***0***                 `uvm_info("run_phase", fifo_seq_driv.convert2string_stimulus(), UVM_HIGH)
                                            1501     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      30        27         3    90.00%

================================Statement Details================================

Statement Coverage for instance /fifo_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File driver.sv
    1                                                package fifo_driver_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import fifo_seq_pkg::*; 
    5                                                    import fifo_config_pkg::*;
    6                                                
    7                                                    class fifo_driver extends uvm_driver#(fifo_seq_item); 
    8               1                    ***0***             `uvm_component_utils(fifo_driver)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       virtual fifo_if fifo_vif; 
    11                                                       fifo_seq_item fifo_seq_driv; 
    12                                               
    13                                                       function new(string name = "fifo_driver", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction
    16                                               
    17                                                       task run_phase(uvm_phase phase);
    18              1                          1                 forever begin
    19              1                       1502                 fifo_seq_driv = fifo_seq_item::type_id::create("fifo_seq_driv");
    20              1                       1502                 seq_item_port.get_next_item(fifo_seq_driv);
    21              1                       1501                 fifo_vif.rst_n = fifo_seq_driv.rst_n;
    22              1                       1501                 fifo_vif.wr_en = fifo_seq_driv.wr_en;
    23              1                       1501                 fifo_vif.rd_en = fifo_seq_driv.rd_en;
    24              1                       1501                 fifo_vif.data_in = fifo_seq_driv.data_in;
    25              1                       1501                 @(negedge fifo_vif.clk);
    26              1                       1501                 fifo_seq_driv.data_out = fifo_vif.data_out;
    27              1                       1501                 fifo_seq_driv.full = fifo_vif.full;
    28              1                       1501                 fifo_seq_driv.empty = fifo_vif.empty;
    29              1                       1501                 fifo_seq_driv.almostfull = fifo_vif.almostfull;  
    30              1                       1501                 fifo_seq_driv.almostempty = fifo_vif.almostempty;
    31              1                       1501                 fifo_seq_driv.wr_ack = fifo_vif.wr_ack;
    32              1                       1501                 fifo_seq_driv.overflow = fifo_vif.overflow;
    33              1                       1501                 fifo_seq_driv.underflow = fifo_vif.underflow;
    34              1                       1501                 fifo_seq_driv.data_out_ref = fifo_vif.data_out_ref;
    35              1                       1501                 fifo_seq_driv.full_ref = fifo_vif.full_ref;
    36              1                       1501                 fifo_seq_driv.empty_ref =fifo_vif.empty_ref;
    37              1                       1501                 fifo_seq_driv.almostfull_ref = fifo_vif.almostfull_ref;
    38              1                       1501                 fifo_seq_driv.almostempty_ref = fifo_vif.almostempty_ref;
    39              1                       1501                 fifo_seq_driv.wr_ack_ref = fifo_vif.wr_ack_ref;
    40              1                       1501                 fifo_seq_driv.overflow_ref = fifo_vif.overflow_ref;
    41              1                       1501                 fifo_seq_driv.underflow_ref =fifo_vif.underflow_ref;
    42              1                       1501                 seq_item_port.item_done();
    43              1                    ***0***                 `uvm_info("run_phase", fifo_seq_driv.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /fifo_agent_pkg
=== Design Unit: work.fifo_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /fifo_agent_pkg
NOTE: The modification timestamp for source file 'agent.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File agent.sv
------------------------------------IF Branch------------------------------------
    26                                         1     Count coming in to IF
    26              1                    ***0***                     `uvm_fatal("build_phase", "unable to configration object");
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    27                                   ***0***     Count coming in to IF
    27              1                    ***0***                 end
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /fifo_agent_pkg --
NOTE: The modification timestamp for source file 'agent.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File agent.sv
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import fifo_driver_pkg::*;
    5                                                    import fifo_monitor_pkg::*;
    6                                                    import fifo_sequencer_pkg::*;
    7                                                    import fifo_config_pkg::*;
    8                                                    import fifo_seq_pkg::*;
    9                                                
    10                                                   class fifo_agent extends uvm_agent;
    11                                                       `uvm_component_utils(fifo_agent)
    12              1                    ***0***     
    12              2                    ***0***     
    12              3                          2     
    13                                                       fifo_config cfg;        
    14                                                       fifo_driver driver;
    15                                                       fifo_monitor monitor;
    16                                                       fifo_sequencer sqr;
    17                                                       uvm_analysis_port #(fifo_seq_item) agent_ap;
    18                                               
    19                                                       function new(string name = "fifo_agent", uvm_component parent = null);
    20                                                           super.new(name, parent);
    21              1                          1             endfunction
    22                                               
    23                                                       function void build_phase(uvm_phase phase);
    24                                                           super.build_phase(phase);
    25              1                          1                 if (!uvm_config_db#(fifo_config)::get(this, "", "CFG", cfg)) begin
    26                                                               `uvm_fatal("build_phase", "unable to configration object");
    27              1                    ***0***                 end
    28                                                           sqr = fifo_sequencer::type_id::create("sqr", this);
    29                                                           driver = fifo_driver::type_id::create("driver", this);
    30              1                          1                 monitor = fifo_monitor::type_id::create("monitor", this);
    31              1                          1                 agent_ap = new("agent_ap",this);
    32              1                          1             endfunction
    33              1                          1     
    34                                                       function void connect_phase(uvm_phase phase);
    35                                                           super.connect_phase(phase);
    36                                                           driver.fifo_vif = cfg.fifo_vif;
    37              1                          1                 monitor.fifo_vif = cfg.fifo_vif;
    38                                                           driver.seq_item_port.connect(sqr.seq_item_export);
    39              1                          1                 monitor.mon_ap.connect(agent_ap);
    40              1                          1             endfunction
    41                                                   endclass
    42                                               endpackage
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import fifo_driver_pkg::*;
    5                                                    import fifo_monitor_pkg::*;
    6                                                    import fifo_sequencer_pkg::*;
    7                                                    import fifo_config_pkg::*;
    8                                                    import fifo_seq_pkg::*;
    9                                                
    10                                                   class fifo_agent extends uvm_agent;
    11                                                       `uvm_component_utils(fifo_agent)
    12                                               
    13                                                       fifo_config cfg;        
    14                                                       fifo_driver driver;
    15                                                       fifo_monitor monitor;
    16                                                       fifo_sequencer sqr;
    17                                                       uvm_analysis_port #(fifo_seq_item) agent_ap;
    18                                               
    19                                                       function new(string name = "fifo_agent", uvm_component parent = null);
    20                                                           super.new(name, parent);
    21                                                       endfunction
    22                                               
    23                                                       function void build_phase(uvm_phase phase);
    24                                                           super.build_phase(phase);
    25                                                           if (!uvm_config_db#(fifo_config)::get(this, "", "CFG", cfg)) begin
    26                                                               `uvm_fatal("build_phase", "unable to configration object");
    27                                                           end
    28                                                           sqr = fifo_sequencer::type_id::create("sqr", this);
    29                                                           driver = fifo_driver::type_id::create("driver", this);
    30                                                           monitor = fifo_monitor::type_id::create("monitor", this);
    31                                                           agent_ap = new("agent_ap",this);
    32                                                       endfunction
    33                                               
    34                                                       function void connect_phase(uvm_phase phase);
    35                                                           super.connect_phase(phase);
    36                                                           driver.fifo_vif = cfg.fifo_vif;
    37                                                           monitor.fifo_vif = cfg.fifo_vif;
    38                                                           driver.seq_item_port.connect(sqr.seq_item_export);
    39                                                           monitor.mon_ap.connect(agent_ap);
    40                                                       endfunction
    41                                                   endclass
    42                                               endpackage


=================================================================================
=== Instance: /fifo_env_pkg
=== Design Unit: work.fifo_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /fifo_env_pkg --
NOTE: The modification timestamp for source file 'env.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File env.sv
    1                                                package fifo_env_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import fifo_agent_pkg::*;
    4                                                    import fifo_coverage_pkg::*;
    5                                                    import fifo_scoreboard_pkg::*;
    6                                                    import fifo_seq_pkg::*;
    7                                                    `include "uvm_macros.svh"
    8                                                
    9                                                    class fifo_env extends uvm_env;
    10              1                    ***0***             `uvm_component_utils(fifo_env)
    10              2                    ***0***     
    10              3                          2     
    11                                               
    12                                                       fifo_agent agent;
    13                                                       fifo_coverage cov;
    14                                                       fifo_scoreboard score;
    15                                                       uvm_analysis_port #(fifo_seq_item) agent_ap;
    16                                               
    17                                                       function new(string name = "fifo_env", uvm_component parent = null);
    18                                                           super.new(name, parent);
    19                                                       endfunction
    20              1                          1     
    21                                                       function void build_phase(uvm_phase phase);
    22                                                           super.build_phase(phase);
    23                                                           agent = fifo_agent::type_id::create("agent", this);
    24              1                          1                 cov = fifo_coverage::type_id::create("cov", this); 
    25              1                          1                 score = fifo_scoreboard::type_id::create("score", this); 
    26              1                          1                 agent_ap = new ("agent_ap",this);
    27                                                       endfunction
    28              1                          1             
    29              1                          1             function void connect_phase(uvm_phase phase);
    30                                                           agent.agent_ap.connect(cov.cov_export);
    31                                                           agent.agent_ap.connect(score.score_export);
    32                                                       endfunction
    33              1                          1         endclass
    34                                               endpackage 


=================================================================================
=== Instance: /fifo_test_pkg
=== Design Unit: work.fifo_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        22        10        12    45.45%

================================Branch Details================================

Branch Coverage for instance /fifo_test_pkg
NOTE: The modification timestamp for source file 'test.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.sv
------------------------------------IF Branch------------------------------------
    44                                         1     Count coming in to IF
    44              1                    ***0***             task run_phase(uvm_phase phase);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              1                    ***0***                 super.run_phase(phase);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                         1     Count coming in to IF
    55              1                          1     
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    57                                         1     Count coming in to IF
    57              1                          1                 seq_read.start(env.agent.sqr);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    59                                         1     Count coming in to IF
    59              1                          1     
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    61                                         1     Count coming in to IF
    61              1                          1                 seq_wr_rd.start(env.agent.sqr);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    63                                         1     Count coming in to IF
    63              1                          1     
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    65                                         1     Count coming in to IF
    65              1                          1                 phase.drop_objection(this);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                         1     Count coming in to IF
    67              1                          1         endclass
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    69                                         1     Count coming in to IF
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    71                                         1     Count coming in to IF
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      29        26         3    89.65%

================================Statement Details================================

Statement Coverage for instance /fifo_test_pkg --
NOTE: The modification timestamp for source file 'test.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.sv
    1                                                package fifo_test_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import fifo_env_pkg::*;
    4                                                    import fifo_config_pkg::*;
    5                                                    import fifo_seq_pkg::*;
    6                                                    import fifo_seq_write::*;
    7                                                    import fifo_seq_read::*;
    8                                                    import fifo_seq_read_write::*;
    9                                                    import fifo_seq_pkg_reset::*;
    10                                                   `include "uvm_macros.svh"
    11                                               
    12                                                   class fifo_test extends uvm_test;
    13              1                    ***0***             `uvm_component_utils(fifo_test)
    13              2                    ***0***     
    13              3                          4     
    14                                               
    15                                                       fifo_env env;
    16                                                       fifo_config cfg;
    17                                                       virtual fifo_if fifo_vif;
    18                                                       write_only_sequence seq_write;
    19                                                       read_only_sequence seq_read;
    20                                                       write_read_sequence seq_wr_rd;
    21                                                       fifo_seq_item_reset seq_reset;
    22                                               
    23                                                       function new(string name = "fifo_test", uvm_component parent = null);
    24                                                           super.new(name, parent);
    25                                                       endfunction
    26                                               
    27                                                       function void build_phase(uvm_phase phase);
    28                                                           super.build_phase(phase);
    29              1                          1     
    30                                                           env = fifo_env::type_id::create("env", this);
    31                                                           cfg = fifo_config::type_id::create("cfg", this);
    32                                                           seq_write = write_only_sequence::type_id::create("seq_write",this);
    33              1                          1                 seq_read = read_only_sequence::type_id::create("seq_read",this);
    34                                                           seq_wr_rd = write_read_sequence::type_id::create("seq_wr_rd",this);
    35              1                          1                 seq_reset = fifo_seq_item_reset::type_id::create("seq_reset", this);
    36              1                          1     
    37                                                           if (!uvm_config_db#(virtual fifo_if)::get(this, "", "FIFO_IF", cfg.fifo_vif)) begin // cfg.
    38              1                          1                     `uvm_fatal("build_phase", "test no vif");
    39              1                          1                 end
    40              1                          1     
    41              1                          1                 uvm_config_db#(fifo_config)::set(this, "*", "CFG", cfg);
    42                                                       endfunction
    43                                               
    44                                                       task run_phase(uvm_phase phase);
    45              1                    ***0***                 super.run_phase(phase);
    46                                                           phase.raise_objection(this);
    47                                               
    48              1                          1                 `uvm_info("run_phase", "reset asserted", UVM_LOW)
    49                                                           seq_reset.start(env.agent.sqr);
    50                                                           `uvm_info("run_phase", "reset deasserted", UVM_LOW)
    51                                               
    52              1                          1                 `uvm_info("run_phase", "stimulus generation write started", UVM_LOW)
    53              1                          1                 seq_write.start(env.agent.sqr);
    54                                                           `uvm_info("run_phase", "stimulus generation write ended", UVM_LOW)
    55              1                          1     
    56              1                          1                 `uvm_info("run_phase", "stimulus generation read started", UVM_LOW)
    57              1                          1                 seq_read.start(env.agent.sqr);
    58                                                           `uvm_info("run_phase", "stimulus generation read ended", UVM_LOW)
    59              1                          1     
    60              1                          1                 `uvm_info("run_phase", "stimulus generation write_read started", UVM_LOW)
    61              1                          1                 seq_wr_rd.start(env.agent.sqr);
    62                                                           `uvm_info("run_phase", "stimulus generation write_read ended", UVM_LOW)
    63              1                          1     
    64              1                          1                 `uvm_info("fifo_test", "Running FIFO Test", UVM_MEDIUM);
    65              1                          1                 phase.drop_objection(this);
    66                                                       endtask
    67              1                          1         endclass
    68              1                          1     endpackage
    1                                                package fifo_test_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import fifo_env_pkg::*;
    4                                                    import fifo_config_pkg::*;
    5                                                    import fifo_seq_pkg::*;
    6                                                    import fifo_seq_write::*;
    7                                                    import fifo_seq_read::*;
    8                                                    import fifo_seq_read_write::*;
    9                                                    import fifo_seq_pkg_reset::*;
    10                                                   `include "uvm_macros.svh"
    11                                               
    12                                                   class fifo_test extends uvm_test;
    13                                                       `uvm_component_utils(fifo_test)
    14                                               
    15                                                       fifo_env env;
    16                                                       fifo_config cfg;
    17                                                       virtual fifo_if fifo_vif;
    18                                                       write_only_sequence seq_write;
    19                                                       read_only_sequence seq_read;
    20                                                       write_read_sequence seq_wr_rd;
    21                                                       fifo_seq_item_reset seq_reset;
    22                                               
    23                                                       function new(string name = "fifo_test", uvm_component parent = null);
    24                                                           super.new(name, parent);
    25                                                       endfunction
    26                                               
    27                                                       function void build_phase(uvm_phase phase);
    28                                                           super.build_phase(phase);
    29                                               
    30                                                           env = fifo_env::type_id::create("env", this);
    31                                                           cfg = fifo_config::type_id::create("cfg", this);
    32                                                           seq_write = write_only_sequence::type_id::create("seq_write",this);
    33                                                           seq_read = read_only_sequence::type_id::create("seq_read",this);
    34                                                           seq_wr_rd = write_read_sequence::type_id::create("seq_wr_rd",this);
    35                                                           seq_reset = fifo_seq_item_reset::type_id::create("seq_reset", this);
    36                                               
    37                                                           if (!uvm_config_db#(virtual fifo_if)::get(this, "", "FIFO_IF", cfg.fifo_vif)) begin // cfg.
    38                                                               `uvm_fatal("build_phase", "test no vif");
    39                                                           end
    40                                               
    41                                                           uvm_config_db#(fifo_config)::set(this, "*", "CFG", cfg);
    42                                                       endfunction
    43                                               
    44                                                       task run_phase(uvm_phase phase);
    45                                                           super.run_phase(phase);
    46                                                           phase.raise_objection(this);
    47                                               
    48                                                           `uvm_info("run_phase", "reset asserted", UVM_LOW)
    49                                                           seq_reset.start(env.agent.sqr);
    50                                                           `uvm_info("run_phase", "reset deasserted", UVM_LOW)
    51                                               
    52                                                           `uvm_info("run_phase", "stimulus generation write started", UVM_LOW)
    53                                                           seq_write.start(env.agent.sqr);
    54                                                           `uvm_info("run_phase", "stimulus generation write ended", UVM_LOW)
    55                                               
    56                                                           `uvm_info("run_phase", "stimulus generation read started", UVM_LOW)
    57                                                           seq_read.start(env.agent.sqr);
    58                                                           `uvm_info("run_phase", "stimulus generation read ended", UVM_LOW)
    59                                               
    60                                                           `uvm_info("run_phase", "stimulus generation write_read started", UVM_LOW)
    61                                                           seq_wr_rd.start(env.agent.sqr);
    62                                                           `uvm_info("run_phase", "stimulus generation write_read ended", UVM_LOW)
    63                                               
    64                                                           `uvm_info("fifo_test", "Running FIFO Test", UVM_MEDIUM);
    65                                                           phase.drop_objection(this);
    66                                                       endtask
    67                                                   endclass
    68                                               endpackage
    1                                                package fifo_test_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    import fifo_env_pkg::*;
    4                                                    import fifo_config_pkg::*;
    5                                                    import fifo_seq_pkg::*;
    6                                                    import fifo_seq_write::*;
    7                                                    import fifo_seq_read::*;
    8                                                    import fifo_seq_read_write::*;
    9                                                    import fifo_seq_pkg_reset::*;
    10                                                   `include "uvm_macros.svh"
    11                                               
    12                                                   class fifo_test extends uvm_test;
    13                                                       `uvm_component_utils(fifo_test)
    14                                               
    15                                                       fifo_env env;
    16                                                       fifo_config cfg;
    17                                                       virtual fifo_if fifo_vif;
    18                                                       write_only_sequence seq_write;
    19                                                       read_only_sequence seq_read;
    20                                                       write_read_sequence seq_wr_rd;
    21                                                       fifo_seq_item_reset seq_reset;
    22                                               
    23                                                       function new(string name = "fifo_test", uvm_component parent = null);
    24                                                           super.new(name, parent);
    25                                                       endfunction
    26                                               
    27                                                       function void build_phase(uvm_phase phase);
    28                                                           super.build_phase(phase);
    29                                               
    30                                                           env = fifo_env::type_id::create("env", this);
    31                                                           cfg = fifo_config::type_id::create("cfg", this);
    32                                                           seq_write = write_only_sequence::type_id::create("seq_write",this);
    33                                                           seq_read = read_only_sequence::type_id::create("seq_read",this);
    34                                                           seq_wr_rd = write_read_sequence::type_id::create("seq_wr_rd",this);
    35                                                           seq_reset = fifo_seq_item_reset::type_id::create("seq_reset", this);
    36                                               
    37                                                           if (!uvm_config_db#(virtual fifo_if)::get(this, "", "FIFO_IF", cfg.fifo_vif)) begin // cfg.
    38                                                               `uvm_fatal("build_phase", "test no vif");
    39                                                           end
    40                                               
    41                                                           uvm_config_db#(fifo_config)::set(this, "*", "CFG", cfg);
    42                                                       endfunction
    43                                               
    44                                                       task run_phase(uvm_phase phase);
    45                                                           super.run_phase(phase);
    46                                                           phase.raise_objection(this);
    47                                               
    48                                                           `uvm_info("run_phase", "reset asserted", UVM_LOW)
    49                                                           seq_reset.start(env.agent.sqr);
    50                                                           `uvm_info("run_phase", "reset deasserted", UVM_LOW)
    51                                               
    52                                                           `uvm_info("run_phase", "stimulus generation write started", UVM_LOW)
    53                                                           seq_write.start(env.agent.sqr);
    54                                                           `uvm_info("run_phase", "stimulus generation write ended", UVM_LOW)
    55                                               
    56                                                           `uvm_info("run_phase", "stimulus generation read started", UVM_LOW)
    57                                                           seq_read.start(env.agent.sqr);
    58                                                           `uvm_info("run_phase", "stimulus generation read ended", UVM_LOW)
    59                                               
    60                                                           `uvm_info("run_phase", "stimulus generation write_read started", UVM_LOW)
    61                                                           seq_wr_rd.start(env.agent.sqr);
    62                                                           `uvm_info("run_phase", "stimulus generation write_read ended", UVM_LOW)
    63                                               
    64                                                           `uvm_info("fifo_test", "Running FIFO Test", UVM_MEDIUM);
    65                                                           phase.drop_objection(this);
    66                                                       endtask
    67                                                   endclass
    68                                               endpackage


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /fifo_coverage_pkg/fifo_coverage/cg             100.00%        100          -    Covered              
    covered/total bins:                                    48         48          -                      
    missing/total bins:                                     0         48          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint #coverpoint__0#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_en_active                                  867          1          -    Covered              
        bin wr_en_inactive                                634          1          -    Covered              
    Coverpoint #coverpoint__1#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin rd_en_active                                  653          1          -    Covered              
        bin rd_en_inactive                                848          1          -    Covered              
    Coverpoint #coverpoint__2#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin full_active                                   644          1          -    Covered              
        bin full_inactive                                 857          1          -    Covered              
    Coverpoint #coverpoint__3#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin empty_active                                  520          1          -    Covered              
        bin empty_inactive                                981          1          -    Covered              
    Coverpoint #coverpoint__4#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostfull_active                             109          1          -    Covered              
        bin almostfull_inactive                          1392          1          -    Covered              
    Coverpoint #coverpoint__5#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostempty_active                             48          1          -    Covered              
        bin almostempty_inactive                         1453          1          -    Covered              
    Coverpoint #coverpoint__6#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin overflow_active                               623          1          -    Covered              
        bin overflow_inactive                             878          1          -    Covered              
    Coverpoint #coverpoint__7#                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin underflow_active                              497          1          -    Covered              
        bin underflow_inactive                           1004          1          -    Covered              
    Coverpoint #fifo_seq_cov.rd_en__8#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       848          1          -    Covered              
        bin auto[1]                                       653          1          -    Covered              
    Coverpoint #fifo_seq_cov.almostempty__9#          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1453          1          -    Covered              
        bin auto[1]                                        48          1          -    Covered              
    Coverpoint #fifo_seq_cov.wr_en__10#               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       634          1          -    Covered              
        bin auto[1]                                       867          1          -    Covered              
    Coverpoint #fifo_seq_cov.almostfull__11#          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1392          1          -    Covered              
        bin auto[1]                                       109          1          -    Covered              
    Coverpoint #fifo_seq_cov.rd_en__12#               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       848          1          -    Covered              
        bin auto[1]                                       653          1          -    Covered              
    Coverpoint #fifo_seq_cov.empty__13#               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       981          1          -    Covered              
        bin auto[1]                                       520          1          -    Covered              
    Coverpoint #fifo_seq_cov.wr_en__14#               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       634          1          -    Covered              
        bin auto[1]                                       867          1          -    Covered              
    Coverpoint #fifo_seq_cov.full__15#                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       857          1          -    Covered              
        bin auto[1]                                       644          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                         621          1          -    Covered              
            bin <auto[0],auto[1]>                          23          1          -    Covered              
            bin <auto[1],auto[0]>                         246          1          -    Covered              
            bin <auto[0],auto[0]>                         611          1          -    Covered              
    Cross #cross__1#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                         503          1          -    Covered              
            bin <auto[0],auto[1]>                          17          1          -    Covered              
            bin <auto[1],auto[0]>                         150          1          -    Covered              
            bin <auto[0],auto[0]>                         831          1          -    Covered              
    Cross #cross__2#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          74          1          -    Covered              
            bin <auto[0],auto[1]>                          35          1          -    Covered              
            bin <auto[1],auto[0]>                         793          1          -    Covered              
            bin <auto[0],auto[0]>                         599          1          -    Covered              
    Cross #cross__3#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          19          1          -    Covered              
            bin <auto[0],auto[1]>                          29          1          -    Covered              
            bin <auto[1],auto[0]>                         634          1          -    Covered              
            bin <auto[0],auto[0]>                         819          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/fifo_assert_dut/co1             fifo_assert Verilog  SVA  fifo_assert.sv(9)
                                                                               241 Covered   
/top/DUT/fifo_assert_dut/co2             fifo_assert Verilog  SVA  fifo_assert.sv(16)
                                                                               594 Covered   
/top/DUT/fifo_assert_dut/co3             fifo_assert Verilog  SVA  fifo_assert.sv(23)
                                                                               494 Covered   
/top/DUT/fifo_assert_dut/co4             fifo_assert Verilog  SVA  fifo_assert.sv(30)
                                                                               169 Covered   
/top/DUT/fifo_assert_dut/co5             fifo_assert Verilog  SVA  fifo_assert.sv(38)
                                                                                46 Covered   
/top/DUT/fifo_assert_dut/co6             fifo_assert Verilog  SVA  fifo_assert.sv(43)
                                                                                58 Covered   
/top/DUT/fifo_assert_dut/co7             fifo_assert Verilog  SVA  fifo_assert.sv(50)
                                                                                23 Covered   
/top/DUT/fifo_assert_dut/co8             fifo_assert Verilog  SVA  fifo_assert.sv(57)
                                                                                70 Covered   
/top/DUT/fifo_assert_dut/co9             fifo_assert Verilog  SVA  fifo_assert.sv(64)
                                                                                26 Covered   
/top/DUT/fifo_assert_dut/a_cover         fifo_assert Verilog  SVA  fifo_assert.sv(71)
                                                                                45 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 10

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/fifo_assert_dut/as1
                     fifo_assert.sv(8)                  0          1
/top/DUT/fifo_assert_dut/as2
                     fifo_assert.sv(15)                 0          1
/top/DUT/fifo_assert_dut/as3
                     fifo_assert.sv(22)                 0          1
/top/DUT/fifo_assert_dut/as4
                     fifo_assert.sv(29)                 0          1
/top/DUT/fifo_assert_dut/as5
                     fifo_assert.sv(37)                 0          1
/top/DUT/fifo_assert_dut/as6
                     fifo_assert.sv(42)                 0          1
/top/DUT/fifo_assert_dut/as7
                     fifo_assert.sv(49)                 0          1
/top/DUT/fifo_assert_dut/as8
                     fifo_assert.sv(56)                 0          1
/top/DUT/fifo_assert_dut/as9
                     fifo_assert.sv(63)                 0          1
/top/DUT/fifo_assert_dut/a_reset
                     fifo_assert.sv(70)                 0          1
/fifo_seq_read_write/write_read_sequence/body/#ublk#180710693#15/immed__22
                     read_write_seq.sv(22)              0          1
/fifo_seq_read/read_only_sequence/body/#ublk#11263364#17/immed__23
                     read_seq.sv(23)                    0          1
/fifo_seq_write/write_only_sequence/body/#ublk#180092837#16/immed__21
                     write_seq.sv(21)                   0          1

Total Coverage By Instance (filtered view): 81.77%

